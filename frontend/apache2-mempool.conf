# This config file can be used to host mempool on your own domain with a valid ssl certificate.
# It assumes that the backend and frontend are built and already deployed locally.
# The following modules must be enabled:
#  expires_module (shared)
#  headers_module (shared)
#  proxy_module (shared)
#  proxy_fcgi_module (shared)
#  proxy_http_module (shared)
#  proxy_wstunnel_module (shared)
#  rewrite_module (shared)
#  ssl_module (shared)
<VirtualHost *:443>
    ServerName mempool.somedomain.com
    DocumentRoot /var/www/mempool/browser

    # SSL Settings  
    SSLEngine on
    SSLSessionCacheTimeout 14400
    SSLProtocol TLSv1.3
    SSLCipherSuite HIGH:!aNULL
    
    # sample settings for letsencrypt. adapt as needed
    Include /etc/letsencrypt/options-ssl-apache.conf
    SSLCertificateFile /etc/letsencrypt/live/somedomain.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/somedomain.com/privkey.pem

    # log files
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    # Proxy settings for all proxy requests
    ProxyTimeout 300
    ProxyRequests Off
    ProxyPreserveHost On

    <Directory /var/www/mempool/browser>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>

    DirectoryIndex index.html

    # Enable browser and proxy caching
    Header set Cache-Control "public, no-transform"
    Header set Vary "Accept-Language, Cookie"

    # Proxy for /api/* (map to /api/v1/*)
    <Location /api>
        RewriteEngine Off
        ProxyPass http://127.0.0.1:8999/api/v1 retry=0
        ProxyPassReverse http://127.0.0.1:8999/api/v1
    </Location>

    # Proxy for /api/v1/*
    <Location /api/v1>
        RewriteEngine Off
        ProxyPass http://127.0.0.1:8999/api/v1 retry=0
        ProxyPassReverse http://127.0.0.1:8999/api/v1
    </Location>

    # WebSocket proxy for /api/v1/ws
    <Location /api/v1/ws>
        RewriteEngine Off
        ProxyPass ws://127.0.0.1:8999/api/v1/ws retry=0
        ProxyPassReverse ws://127.0.0.1:8999/api/v1/ws
    </Location>

    # WebSocket proxy for /ws/*
    <Location /ws>
        RewriteEngine Off
        ProxyPass ws://127.0.0.1:8999/ retry=0
        ProxyPassReverse ws://127.0.0.1:8999/
    </Location>

    RewriteEngine On

    # Language detection based on Accept-Language header
    SetEnvIf Accept-Language ~*^en-US APP_HEADER_LANG=en-US
    SetEnvIf Accept-Language ~*^en APP_HEADER_LANG=en-US
    SetEnvIf Accept-Language ~*^ar APP_HEADER_LANG=ar
    SetEnvIf Accept-Language ~*^ca APP_HEADER_LANG=ca
    SetEnvIf Accept-Language ~*^cs APP_HEADER_LANG=cs
    SetEnvIf Accept-Language ~*^de APP_HEADER_LANG=de
    SetEnvIf Accept-Language ~*^es APP_HEADER_LANG=es
    SetEnvIf Accept-Language ~*^fa APP_HEADER_LANG=fa
    SetEnvIf Accept-Language ~*^fr APP_HEADER_LANG=fr
    SetEnvIf Accept-Language ~*^ko APP_HEADER_LANG=ko
    SetEnvIf Accept-Language ~*^it APP_HEADER_LANG=it
    SetEnvIf Accept-Language ~*^he APP_HEADER_LANG=he
    SetEnvIf Accept-Language ~*^ka APP_HEADER_LANG=ka
    SetEnvIf Accept-Language ~*^hu APP_HEADER_LANG=hu
    SetEnvIf Accept-Language ~*^mk APP_HEADER_LANG=mk
    SetEnvIf Accept-Language ~*^nl APP_HEADER_LANG=nl
    SetEnvIf Accept-Language ~*^ja APP_HEADER_LANG=ja
    SetEnvIf Accept-Language ~*^nb APP_HEADER_LANG=nb
    SetEnvIf Accept-Language ~*^pl APP_HEADER_LANG=pl
    SetEnvIf Accept-Language ~*^pt APP_HEADER_LANG=pt
    SetEnvIf Accept-Language ~*^ro APP_HEADER_LANG=ro
    SetEnvIf Accept-Language ~*^ru APP_HEADER_LANG=ru
    SetEnvIf Accept-Language ~*^sl APP_HEADER_LANG=sl
    SetEnvIf Accept-Language ~*^fi APP_HEADER_LANG=fi
    SetEnvIf Accept-Language ~*^sv APP_HEADER_LANG=sv
    SetEnvIf Accept-Language ~*^th APP_HEADER_LANG=th
    SetEnvIf Accept-Language ~*^tr APP_HEADER_LANG=tr
    SetEnvIf Accept-Language ~*^uk APP_HEADER_LANG=uk
    SetEnvIf Accept-Language ~*^vi APP_HEADER_LANG=vi
    SetEnvIf Accept-Language ~*^zh APP_HEADER_LANG=zh
    SetEnvIf Accept-Language ~*^hi APP_HEADER_LANG=hi
    SetEnvIf Accept-Language .* APP_HEADER_LANG=en-US

    # Set default APP_LANG to APP_HEADER_LANG
    SetEnvIf REQUEST_URI ^/$ APP_LANG=%{ENV:APP_HEADER_LANG}
    # Ensure APP_LANG defaults to en-US
    SetEnv APP_LANG en-US

    # Override with cookie if present
    SetEnvIf Cookie "lang=([^; ]+)" APP_LANG=$1

    # Root redirect to language index
    RewriteCond %{REQUEST_URI} ^/$
    RewriteCond %{DOCUMENT_ROOT}/%{ENV:APP_LANG}/index.html -f
    RewriteRule ^ /%{ENV:APP_LANG}/index.html [L]

    # Fallback to en-US for root if language index.html not found
    RewriteCond %{REQUEST_URI} ^/$
    RewriteCond %{DOCUMENT_ROOT}/en-US/index.html -f
    RewriteRule ^ /en-US/index.html [L]

    # Rewrite to lang-prefixed path if file exists there
    RewriteCond %{DOCUMENT_ROOT}/%{ENV:APP_LANG}%{REQUEST_URI} -f
    RewriteRule ^(.+)$ /%{ENV:APP_LANG}/$1 [L]

    # Rewrite to en-US-prefixed path if file exists there (fallback)
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{DOCUMENT_ROOT}/en-US%{REQUEST_URI} -f
    RewriteRule ^(.+)$ /en-US/$1 [L]

    # Final SPA fallback to language index.html
    <LocationMatch "^/(?!api|api/v1|ws|api/v1/ws|resources/config|resources/customize).*$">
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule ^(.+)$ /%{ENV:APP_LANG}/index.html [L]
        ExpiresDefault "access plus 10 minutes"
    </LocationMatch>

    # Resources location with caching and fallback
    <Location /resources>
        ExpiresDefault "access plus 1 hour"
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule ^(.+)$ /%{ENV:APP_LANG}/index.html [L]
    </Location>

    # Resources config with short cache
    <LocationMatch "/resources/config\..*">
        ExpiresDefault "access plus 5 minutes"
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^ - [R=404,L]
    </LocationMatch>

    # Resources customize with short cache
    <LocationMatch "/resources/customize\..*">
        ExpiresDefault "access plus 5 minutes"
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^ - [R=404,L]
    </LocationMatch>

    # Language-specific routes (e.g., /ar/foo -> /ar/index.html if not file)
    <LocationMatch "^/(ar|bg|bs|cs|da|de|et|el|es|eo|eu|fa|fr|gl|ko|hr|id|it|he|ka|lv|lt|hu|mk|ms|nl|ja|nb|nn|pl|pt|pt-BR|ro|ru|sk|sl|sr|sh|fi|sv|th|tr|uk|vi|zh|hi)/">
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule ^/([^/]+)/(.*)$ /$1/index.html [L]
    </LocationMatch>
</VirtualHost>
# Automatically upgrade http to https
<IfModule mod_ssl.c>
<VirtualHost *:80>
  ServerName mempool.somedomain.com
  DocumentRoot /var/www/mempool/browser
  ErrorLog ${APACHE_LOG_DIR}/error.log
  CustomLog ${APACHE_LOG_DIR}/access.log combined
	RewriteEngine on
	RewriteCond %{SERVER_NAME} =mempool.somedomain.com
	RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>
</IfModule>
